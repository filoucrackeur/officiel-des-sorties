{
  "name": "express-mongoose-resource",
  "description": "Express resourceful routing for Mongoose models",
  "version": "0.0.4",
  "homepage": "https://github.com/panta/express-mongoose-resource",
  "author": {
    "name": "Marco Pantaleoni",
    "email": "marco.pantaleoni@gmail.com"
  },
  "dependencies": {
    "mongoose": "3.0.x",
    "express": "2.5.x",
    "express-resource-middleware": "0.2.x"
  },
  "devDependencies": {
    "coffee-script": ">= 1.3.3",
    "muffin": ">= 0.6.2",
    "glob": ">= 3.0.1",
    "mocha": ">= 1.4.2",
    "chai": ">= 1.2.0"
  },
  "keywords": [
    "mongoose",
    "express",
    "resourceful",
    "rest",
    "crud",
    "express-resource"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/panta/express-mongoose-resource.git"
  },
  "bugs": {
    "url": "https://github.com/panta/express-mongoose-resource/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/panta/express-mongoose-resource/master/LICENSE"
    }
  ],
  "directories": {
    "lib": "./lib",
    "test": "./test"
  },
  "scripts": {
    "watch": "coffee -c -w  -o lib src",
    "prepublish": "cake build",
    "test": "NODE_ENV=test node_modules/.bin/mocha --compilers coffee:coffee-script --timeout 10000 -R spec test/*.coffee"
  },
  "main": "lib/index.js",
  "engines": {
    "node": ">= 0.6.0",
    "npm": ">= 1.0.0"
  },
  "readme": "# express-mongoose-resource\n\nexpress-mongoose-resource provides resourceful routing for [mongoose][] models to [expressjs][].\n\nThe library uses and extends [express-resource][], remaining fully compatible with it.\n\nNote: actually we now use [express-resource-middleware][], which adds route middleware support, remaining fully backward compatible with the original.\n\n## Install\n\nnpm install express-mongoose-resource\n\n## Usage\n\nAs with [express-resource][], simply `require('express-mongoose-resource')`, and resourceful routing will be available through the `app.resource()` method.\nIn addition to the usual [express-resource][] usage and semantics of `app.resource()`, it's now also possible to simply pass a [mongoose][] model to `app.resource()`, and\na new `Resource` object will be returned for the given model.\nFor instance, if we have a [mongoose][] `Forum` model, calling\n\n```javascript\napp.resource({model: Forum});\n```\n\nwill estabilish the default [express-resource][] mapping (apart for the new `schema` action):\n\n    GET     /forums/schema       ->  schema\n    GET     /forums              ->  index\n    GET     /forums/new          ->  new\n    POST    /forums              ->  create\n    GET     /forums/:forum       ->  show\n    GET     /forums/:forum/edit  ->  edit\n    PUT     /forums/:forum       ->  update\n    DELETE  /forums/:forum       ->  destroy\n\nwhere the `:forum` parameter is the [mongoose][] ObjectId for the model instance.\nNote that when `model` is not specified, `app.resource()` falls back to the standard [express-resource][] implementation.\n\nThe format is determined using [express-resource][] content negotiation, and if not specified it's assumed to be `json`.\nAll actions are automatically available for the `json` format.\n\nIt's also possible to nest resources:\n\n```javascript\nvar ForumSchema = new mongoose.Schema({\n  ...\n});\nvar Forum = db.model(\"Forum\", ForumSchema);\n\nvar ThreadSchema = new mongoose.Schema({\n  forum: { type: mongoose.ObjectId, ref: 'Forum' },\n  ...\n});\nvar Thread = db.model(\"Thread\", ThreadSchema);\n\n...\n\nvar r_forum = app.resource({model: Forum});\nvar r_thread = app.resource({model: Thread});\n\nr_forum.add(r_thread, {pivotField: 'forum'});\n```\n\nwhich will a `Thread` resource nested under `Forum`:\n\n    GET     /forums/:forum/threads/schema      ->  schema\n    GET     /forums/:forum/threads             ->  index\n    GET     /forums/:forum/threads/new         ->  new\n    POST    /forums/:forum/threads             ->  create\n    GET     /forums/:forum/threads/:forum      ->  show\n    GET     /forums/:forum/threads/:forum/edit ->  edit\n    PUT     /forums/:forum/threads/:forum      ->  update\n    DELETE  /forums/:forum/threads/:forum      ->  destroy\n\n### Content-Negotiation\n\nThe format is determined using [express-resource][] content negotiation, and if not specified it's assumed to be `json`.\n\n### HTML resources\n\nThe `index`, `new`, `show` and `edit` actions also support the `html` format. In this case, an [expressjs][] template is rendered.\nFor the `Forum` example above, the templates would be:\n\n- `forums/index` for the `index` action\n- `forums/edit` for the `new` and `edit` actions\n- `forums/show` for the `show` action\n\nThe context passed to the template contains the following keys:\n\n- `view`, the view name (`index`, `new`, `show`, `edit`)\n- `name`, the template name (`index`, `show`, `edit`) (by default, `edit` is used by `new` and `edit` views)\n- `model`, the mongoose model\n- `schema`, the mongoose schema\n- `modelName`, the mongoose model name\n- `resource_id`, the action name\n- `instance`, the mongoose model instance (`new`, `show` and `edit` actions)\n- `object`, a plain JavaScript object corresponding to the mongoose model instance, as returned by mongoose `toJSON()` (`new`, `show` and `edit` actions)\n- `instances`, the mongoose result set (`index` action)\n- `objects`, an array of plain JavaScript objects corresponding to the mongoose result set (`index` action)\n- `json`, the JSON string representation of the model instance (`new`, `show` and `edit` actions) or of the result set  (`index` action)\n\nWhen using nested resources, the context also contains the `pivot` field value, name and id. In the example above, the context variable `pivot` would contain `forum`, `pivot_id` would contain the forum id, and `forum` would contain the serialized forum model.\n\n## Bugs and pull requests\n\nPlease use the github [repository][] to notify bugs and make pull requests.\n\n## License\n\nThis software is Â© 2012 Marco Pantaleoni, released under the MIT licence. Use it, fork it.\n\nSee the LICENSE file for details.\n\n[mongoose]: http://mongoosejs.com\n[express-resource]: http://github.com/visionmedia/express-resource\n[express-resource-middleware]: https://npmjs.org/package/express-resource-middleware\n[CoffeeScript]: http://jashkenas.github.com/coffee-script/\n[nodejs]: http://nodejs.org/\n[expressjs]: http://expressjs.com\n[Mocha]: http://visionmedia.github.com/mocha/\n[Jade]: http://jade-lang.com\n[repository]: http://github.com/panta/express-mongoose-resource\n",
  "readmeFilename": "README.md",
  "_id": "express-mongoose-resource@0.0.4",
  "_from": "express-mongoose-resource@0.0.4"
}
